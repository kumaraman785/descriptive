# -*- coding: utf-8 -*-
"""movie_recommendation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bIHWkmvacqI9HPJL0isKKRBOrAwTsDDM

#Import Library
"""

import pandas as pd
import numpy as np

"""#Import Dataset

"""

movie_df=pd.read_csv('https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/Movies%20Recommendation.csv')

movie_df.info()

movie_df.head()

movie_df.describe()

movie_df.shape

movie_df.columns

"""#Get Feature Selection"""

movie_feature=movie_df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

movie_feature.shape

movie_feature

x=movie_feature['Movie_Genre']+movie_feature['Movie_Keywords']+movie_feature['Movie_Tagline']+movie_feature['Movie_Cast']+movie_feature['Movie_Director']

x

"""#Get Feature Text Conversion to Tokens"""

from sklearn.feature_extraction.text import TfidfVectorizer

r=TfidfVectorizer()

x=r.fit_transform(x)

x.shape

print(x)

"""#Get Similarity Score Using Cosine Similarity"""

from sklearn.metrics.pairwise import cosine_similarity

similarity=cosine_similarity(x)

similarity

similarity.shape

"""#Get Movie name as Input From User and Validate for Closet spelling"""

fav_movie_name=input('Enter your favourite movie name:')

all_movie_title_list=movie['Movie_Title'].tolist()

import difflib as df

movie_recom=df.get_close_matches(fav_movie_name,all_movie_title_list)

print(movie_recom)

close_match=movie_recom[0]

print(close_match)

index_of_close_match_movie=movie[movie.Movie_Title==close_match]['Movie_ID'].values[0]

print(index_of_close_match_movie)

# getting a list of similar movies
recommadation_score=list(enumerate(similarity[index_of_close_match_movie]))

print(recommadation_score)

len(recommadation_score)

"""# Get all Movies Sort Based on Recommendation Score wrt Favourite Movie"""

#sorting the movies based on their similarity score
sorted_recommadation_score=sorted(recommadation_score,key=lambda x:x[1],reverse=True)

print(sorted_recommadation_score)

#print the name of similar movies based on their index
print('Top 30 recommadation/n')

i=1
for m in sorted_recommadation_score:
    index=m[0] # Use m to access the movie index from the sorted list
    title_from_index = movie_df[(movie_df.index==index)]['Movie_Title'].values[0] # Assuming 'movie_df' is your DataFrame
    if(i<30):
        print(i,'.',title_from_index)
    i+=1

"""# **#Top 10 Movie Recommendation system**"""

from os import close
movie_name=input('Enter your favourite movie name:')
list_of_all_titles=movie_df['Movie_Title'].tolist()
find_close_match=df.get_close_matches(movie_name,list_of_all_titles)
close_match=find_close_match[0]
index_of_movie=movie_df[movie_df.Movie_Title==close_match]['Movie_ID'].values[0]
recommadation_score=list(enumerate(similarity[index_of_movie]))
sorted_recommadation_score=sorted(recommadation_score,key=lambda x:x[1],reverse=True)
print('top 10 suggested movies for you/n')
i=1
for movie in sorted_recommadation_score:
    index=movie[0]
    title_from_index=movie_df[movie_df.Movie_ID==index]['Movie_Title'].values
    if (i<11):
        print(i,'.',title_from_index )
    i+=1



























































